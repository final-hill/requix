/*!
 * @license
 * Copyright (C) 2022 Final Hill LLC
 * SPDX-License-Identifier: AGPL-3.0-only
 * @see <https://spdx.org/licenses/AGPL-3.0-only.html>
 */

import Control, { ControlOptions } from '../../agent/Control';
import RouterLinkPresentation from './RouterLinkPresentation';

export interface RouterLinkOptions extends ControlOptions {
    onClick?: (this: ThisType<RouterLinkControl>, routePath: string) => void;
    text: string;
    routePath: string;
}

export default class RouterLinkControl extends Control<RouterLinkPresentation> {
    private _text: string;
    private _routePath: string;
    private _clickHandler: (routePath: string) => void;

    constructor(options: RouterLinkOptions) {
        super();
        this._text = options.text;
        this._routePath = options.routePath;
        this._clickHandler = options.onClick ?? ((routePath: string) => { });

        Object.assign(this.presentation, {
            text: this._text,
            routePath: this._routePath
        });
    }

    override initPresentation(): RouterLinkPresentation {
        return new RouterLinkPresentation({
            onClick: () => this._clickHandler.call(this, this._routePath)
        });
    }
}